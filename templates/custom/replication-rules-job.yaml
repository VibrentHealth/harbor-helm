{{- $root := . -}}
{{- range $replication := .Values.custom.replicationRules }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ $replication.name }}-replication
  namespace: {{ $root.Release.Namespace }}
  annotations:
    "helm.sh/hook": "post-install, post-upgrade"
    "helm.sh/hook-delete-policy": "before-hook-creation"
    {{- if $replication.job.annotations }}
{{ toYaml  $replication.job.annotations | indent 4 }}
    {{- end }}
spec:
  template:
    metadata:
      name: {{ $replication.name }}
      {{- if $replication.job.podAnnotations }}
      annotations:
{{ toYaml $replication.job.podAnnotations | indent 8 }}
      {{- end }}
    spec:
      {{- if $root.Values.serviceAccount.enabled }}
      serviceAccountName: {{ include "harbor.serviceAccountName" $root }}
      {{- end }}
      restartPolicy: Never
      {{- if $replication.job.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml $replication.job.imagePullSecrets | indent 6 }}
      {{- end }}
      volumes:
      - name: {{ $replication.name }}-replication
        configMap:
          name: {{ $replication.name }}-replication
          defaultMode: 0755
      containers:
      - name: {{ template "harbor.core" $root }}
        image: {{ required "A image is required to run the job that creates replication rules. The image must have curl and jq installed." $replication.job.image }}
        command: ['sh', '-c', './tmp/configureReplication.sh']
        env:
        - name: HARBOR_ADMIN_USERNAME
          value: {{ default "admin" $root.Values.adminUsername }}
        - name: HARBOR_ADMIN_PASSWORD
          value: {{ $root.Values.harborAdminPassword }}
        volumeMounts:
        - name: {{ $replication.name }}-replication
          mountPath: /tmp
---
{{- end }}