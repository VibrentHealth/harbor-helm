{{- $root := . -}}
{{- range $registry := .Values.custom.registries }}
apiVersion: batch/v1
kind: Job
metadata:
  name: configure-registry-{{ $registry.name }}
  namespace: {{ $root.Release.Namespace }}
  annotations:
    "helm.sh/hook": "post-install, post-upgrade"
    "helm.sh/hook-delete-policy": "before-hook-creation"
    {{- if $registry.job.annotations }}
{{ toYaml  $registry.job.annotations | indent 4 }}
    {{- end }}
spec:
  template:
    metadata:
      name: {{ $registry.name }}
      {{- if $registry.job.podAnnotations }}
      annotations:
{{ toYaml $registry.job.podAnnotations | indent 8 }}
      {{- end }}
    spec:
      {{- if $root.Values.serviceAccount.enabled }}
      serviceAccountName: {{ include "harbor.serviceAccountName" $ }}
      {{- end }}
      restartPolicy: Never
      {{- if $registry.job.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml $registry.job.imagePullSecrets | indent 6 }}
      {{- end }}
      volumes:
      - name: configure-registry-{{ $registry.name }}
        configMap:
          name: configure-registry-{{ $registry.name }}
          defaultMode: 0755
      containers:
      - name: {{ template "harbor.core" $root }}
        image: {{  required "A image is required to run the job that creates registries. The image must have curl and jq installed." $registry.job.image }}
        command: ['sh', '-c', 'cat /tmp/configureRegistry.sh && ./tmp/configureRegistry.sh']
        env:
        - name: HARBOR_ADMIN_USERNAME
          value: {{ default "admin" $root.Values.adminUsername }}
        - name: HARBOR_ADMIN_PASSWORD
          value: {{ $root.Values.harborAdminPassword }}
        - name: REGISTRY_URL
          value: {{ required "A registry url is required" $registry.url }}
        {{- if $registry.accessKey }}
        - name: ACCESS_KEY
          value: {{ $registry.accessKey }}
        {{- end }}
        {{- if $registry.accessSecret }}
        - name: ACCESS_SECRET
          value: {{ $registry.accessSecret }}
        {{- end }}
        volumeMounts:
        - name: configure-registry-{{ $registry.name }}
          mountPath: /tmp
---
{{- end }}